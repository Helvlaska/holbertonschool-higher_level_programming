>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

>>> matrix_divided([[2, 4], [6, 8]], 2)
[[1.0, 2.0], [3.0, 4.0]]

>>> matrix_divided([[1.0, 2.0], [3.0, 4.0]], 2)
[[0.5, 1.0], [1.5, 2.0]]

>>> matrix_divided([[1, 2], [3, 4]], 2.0)
[[0.5, 1.0], [1.5, 2.0]]

>>> matrix_divided("not a matrix", 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2], [3, "four"]], 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2], [3]], 2)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[1, 2], [3, 4]], "a")
Traceback (most recent call last):
    ...
TypeError: div must be a number

>>> matrix_divided([[1, 2], [3, 4]], 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

>>> matrix_divided([[1, 2], [3, 4]], 3)
[[0.33, 0.67], [1.0, 1.33]]

>>> matrix_divided([[5]], 2)
[[2.5]]

# Test : présence de booléens dans la matrice
>>> matrix_divided([[True, False], [1, 2]], 1)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
