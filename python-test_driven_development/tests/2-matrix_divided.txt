>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

# Test valide - division entière
>>> matrix_divided([[2, 4], [6, 8]], 2)
[[1.0, 2.0], [3.0, 4.0]]

# Test valide - division avec floats
>>> matrix_divided([[1.0, 2.0], [3.0, 4.0]], 2)
[[0.5, 1.0], [1.5, 2.0]]

# Test valide - division avec div en float
>>> matrix_divided([[1, 2], [3, 4]], 2.0)
[[0.5, 1.0], [1.5, 2.0]]

# TypeError - matrix n’est pas une liste
>>> matrix_divided("not a matrix", 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# TypeError - un élément de la matrice n’est pas une liste
>>> matrix_divided([[1, 2], 3], 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# TypeError - un élément n’est pas un nombre
>>> matrix_divided([[1, 2], [3, "four"]], 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# TypeError - lignes de tailles différentes
>>> matrix_divided([[1, 2], [3]], 2)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

# TypeError - div n’est pas un nombre
>>> matrix_divided([[1, 2], [3, 4]], "a")
Traceback (most recent call last):
    ...
TypeError: div must be a number

# ZeroDivisionError - div vaut 0
>>> matrix_divided([[1, 2], [3, 4]], 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero


